Вопросы 
(своими словами)
1 Разница между значимыми и ссылочными типами. Примеры, как хранятся в памяти. 
Значемые типы хранятся в стеке, ссылочные типы в куче.
2 Как вернуть значение из метода? 
Кkючевым словом return либо out/ref.
3 В чем разница между out и ref? 
Разница в том, что out — это выходной параметр, а ref — входно-выходной.
Для ref-параметра нужно передать его инициализированным, и можно пользоваться его исходным значением. А для out нужно инициализировать его перед вызовом функции, не возможно использовать его значение в функции до присваивания, и нужно инициализировать его в функции.
4. Разница между абстрактным классом и интерфейсом?
Интерфейс - такой же абстрактный класс,только в нем не может быть свойств и не определены тела у методов. Так же стоит заметить, что абстрактный класс наследуется, а интерфейс реализуется. Наследовать мы можем только 1 класс, а реализовать сколько угодно.
5. Разница между new  ovverride  в наследовании
 При работаете с экземпляром класса-наследника через его родительский класс, если вызывать переопределенный виртуальный метод (override), то будет вызвана его реализация из наследника, а если перекрытый (new), то будет вызван метод базового класса.
6. Что такое static? Что можно помечать как статик? Пример использования
Статическими могут быть поля/методы/классы/конструкторы/свойства
 Статические поля, методы, свойства относятся ко всему классу и для обращения к подобным членам класса необязательно создавать экземпляр класса.
 Статические классы объявляются с модификатором static и могут содержать только статические поля, свойства и методы.
 Статические конструкторы нельзя вызвать в программе вручную. Они выполняются автоматически при самом первом создании объекта данного класса или первом обращении к его статическим членам.
7. Что такое перегрузка метода?
Это создавать один и тот же метод, но с разным набором параметров.
8. Что такое Сборка Мусора? Где и когда происходит? Что убирают?
При использовании переменных типов значений в методе, все значения этих переменных попадают в стек. После завершения работы метода стек очищается.

При использовании ссылочных типов, например, объектов классов, для них также будет отводиться место в стеке, только там будет храниться не значение, а адрес на участок памяти в куче, в котором и будут находиться сами значения данного объекта. И если объект класса перестает использоваться, то при очистке стека ссылка на участок памяти также очищается, однако это не приводит к немедленной очистке самого участка памяти в куче. Впоследствии сборщик мусора (garbage collector) увидит, что на данный участок памяти больше нет ссылок, и очистит его.
Сборщик мусора не запускается сразу после удаления из стека ссылки на объект, размещенный в куче. Он запускается в то время, когда среда CLR обнаружит в этом потребность, например, когда программе требуется дополнительная память.

9. Примеры неуправляемы (unmanaged) ресурсов? Как освобождать такие ресурсы?
Управляемые ресурсы в основном означают "управляемую память", управляемую сборщиком мусора. Когда у вас больше нет ссылок на управляемый объект (который использует управляемую память), сборщик мусора (в конце концов) освободит эту память для вас.
Неуправляемые ресурсы - это все, о чем не знает сборщик мусора. 
Например:
Открыть файлы
Открыть сетевые подключения
Неуправляемая память
Подключенные БД 
Внешние носители.
Освобождать память можно методотм Dispose();

10 Как вызвать конструктор базового класса? как вызвать другой конструктор данного класса?
: base() - вызов конструктора базового класса
: this() - вызов конструктора данного класса